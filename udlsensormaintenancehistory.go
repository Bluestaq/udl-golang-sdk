// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

package unifieddatalibrary

import (
	"time"

	"github.com/stainless-sdks/unifieddatalibrary-go/internal/apijson"
	"github.com/stainless-sdks/unifieddatalibrary-go/option"
	"github.com/stainless-sdks/unifieddatalibrary-go/packages/resp"
)

// UdlSensormaintenanceHistoryService contains methods and other services that help
// with interacting with the unifieddatalibrary API.
//
// Note, unlike clients, this service does not read variables from the environment
// automatically. You should not instantiate this service directly, and instead use
// the [NewUdlSensormaintenanceHistoryService] method instead.
type UdlSensormaintenanceHistoryService struct {
	Options []option.RequestOption
}

// NewUdlSensormaintenanceHistoryService generates a new service that applies the
// given options to each request. These options are applied after the parent
// client's options (if there is one), and before any request-specific options.
func NewUdlSensormaintenanceHistoryService(opts ...option.RequestOption) (r UdlSensormaintenanceHistoryService) {
	r = UdlSensormaintenanceHistoryService{}
	r.Options = opts
	return
}

// Maintenance schedule and operational status of Sensor.
type SensormaintenanceFull struct {
	// Classification marking of the data in IC/CAPCO Portion-marked format.
	ClassificationMarking string `json:"classificationMarking,required"`
	// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
	//
	// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
	// may include both real and simulated data.
	//
	// REAL:&nbsp;Data collected or produced that pertains to real-world objects,
	// events, and analysis.
	//
	// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
	// datasets.
	//
	// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
	// requirements, and for validating technical, functional, and performance
	// characteristics.
	//
	// Any of "REAL", "TEST", "SIMULATED", "EXERCISE".
	DataMode SensormaintenanceFullDataMode `json:"dataMode,required"`
	// The planned outage end time in ISO8601 UTC format.
	EndTime time.Time `json:"endTime,required" format:"date-time"`
	// The site to which this item applies. NOTE - this site code is COLT specific and
	// may not identically correspond to other UDL site IDs.
	SiteCode string `json:"siteCode,required"`
	// Source of the data.
	Source string `json:"source,required"`
	// The planned outage start time in ISO8601 UTC format.
	StartTime time.Time `json:"startTime,required" format:"date-time"`
	// Unique identifier of the record, auto-generated by the system.
	ID string `json:"id"`
	// Description of the activity taking place during this outage.
	Activity string `json:"activity"`
	// The name of the approver.
	Approver string `json:"approver"`
	// The name of the changer, if applicable.
	Changer string `json:"changer"`
	// Time the row was created in the database, auto-populated by the system.
	CreatedAt time.Time `json:"createdAt" format:"date-time"`
	// Application user who created the row in the database, auto-populated by the
	// system.
	CreatedBy string `json:"createdBy"`
	// The duration of the planned outage, expressed as ddd:hh:mm.
	Duration string `json:"duration"`
	// COLT EOWID.
	EowID string `json:"eowId"`
	// The mission capability status of the equipment (e.g. FMC, NMC, PMC, UNK, etc.).
	EquipStatus string `json:"equipStatus"`
	// UUID of the sensor.
	IDSensor string `json:"idSensor"`
	// The sensor face(s) to which this COLT maintenance item applies, if applicable.
	ImpactedFaces string `json:"impactedFaces"`
	// The date that this item became inactive in ISO8601 UTC format.
	InactiveDate time.Time `json:"inactiveDate" format:"date-time"`
	// The internal COLT line number assigned to this item.
	LineNumber string `json:"lineNumber"`
	// The Missile Defense operational capability of this maintenance item. Typical
	// values are G, Y, R, and - for non-applicable sites.
	MdOpsCap string `json:"mdOpsCap"`
	// The Missile Warning operational capability of this maintenance item. Typical
	// values are G, Y, R, and - for non-applicable sites.
	MwOpsCap string `json:"mwOpsCap"`
	// Originating system or organization which produced the data, if different from
	// the source. The origin may be different than the source if the source was a
	// mediating system which forwarded the data on behalf of the origin system. If
	// null, the source may be assumed to be the origin.
	Origin string `json:"origin"`
	// The originating source network on which this record was created, auto-populated
	// by the system.
	OrigNetwork string `json:"origNetwork"`
	// The priority of this maintenance item.
	Priority string `json:"priority"`
	// The minimum time required to recall this activity, expressed as ddd:hh:mm.
	Recall string `json:"recall"`
	// Release.
	Rel string `json:"rel"`
	// Remarks concerning this outage.
	Remark string `json:"remark"`
	// The name of the requestor.
	Requestor string `json:"requestor"`
	// The name of the resource(s) affected by this maintenance item.
	Resource string `json:"resource"`
	// The revision number for this maintenance item.
	Rev string `json:"rev"`
	// The Space Surveillance operational capability of this maintenance item. Typical
	// values are G, Y, R, and - for non-applicable sites.
	SSOpsCap string `json:"ssOpsCap"`
	// Time the row was last updated in the database, auto-populated by the system.
	UpdatedAt time.Time `json:"updatedAt" format:"date-time"`
	// Application user who updated the row in the database, auto-populated by the
	// system.
	UpdatedBy string `json:"updatedBy"`
	// Metadata for the response, check the presence of optional fields with the
	// [resp.Field.IsPresent] method.
	JSON struct {
		ClassificationMarking resp.Field
		DataMode              resp.Field
		EndTime               resp.Field
		SiteCode              resp.Field
		Source                resp.Field
		StartTime             resp.Field
		ID                    resp.Field
		Activity              resp.Field
		Approver              resp.Field
		Changer               resp.Field
		CreatedAt             resp.Field
		CreatedBy             resp.Field
		Duration              resp.Field
		EowID                 resp.Field
		EquipStatus           resp.Field
		IDSensor              resp.Field
		ImpactedFaces         resp.Field
		InactiveDate          resp.Field
		LineNumber            resp.Field
		MdOpsCap              resp.Field
		MwOpsCap              resp.Field
		Origin                resp.Field
		OrigNetwork           resp.Field
		Priority              resp.Field
		Recall                resp.Field
		Rel                   resp.Field
		Remark                resp.Field
		Requestor             resp.Field
		Resource              resp.Field
		Rev                   resp.Field
		SSOpsCap              resp.Field
		UpdatedAt             resp.Field
		UpdatedBy             resp.Field
		ExtraFields           map[string]resp.Field
		raw                   string
	} `json:"-"`
}

// Returns the unmodified JSON received from the API
func (r SensormaintenanceFull) RawJSON() string { return r.JSON.raw }
func (r *SensormaintenanceFull) UnmarshalJSON(data []byte) error {
	return apijson.UnmarshalRoot(data, r)
}

// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
//
// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
// may include both real and simulated data.
//
// REAL:&nbsp;Data collected or produced that pertains to real-world objects,
// events, and analysis.
//
// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
// datasets.
//
// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
// requirements, and for validating technical, functional, and performance
// characteristics.
type SensormaintenanceFullDataMode string

const (
	SensormaintenanceFullDataModeReal      SensormaintenanceFullDataMode = "REAL"
	SensormaintenanceFullDataModeTest      SensormaintenanceFullDataMode = "TEST"
	SensormaintenanceFullDataModeSimulated SensormaintenanceFullDataMode = "SIMULATED"
	SensormaintenanceFullDataModeExercise  SensormaintenanceFullDataMode = "EXERCISE"
)
